# Generated by Django 3.0.4 on 2020-04-28 07:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dn', models.CharField(blank=True, db_column='DN', max_length=250, null=True)),
                ('device_id', models.CharField(db_column='Device ID', max_length=250)),
                ('ems_device_id', models.CharField(blank=True, db_column='EMS Device ID', max_length=250, null=True)),
                ('device_alias', models.CharField(blank=True, db_column='Device Alias', max_length=250, null=True)),
                ('device_ip', models.CharField(blank=True, db_column='Device IP', max_length=50, null=True)),
                ('ems_id', models.CharField(blank=True, db_column='EMS ID', max_length=50, null=True)),
                ('vendor_id', models.CharField(blank=True, db_column='Vendor ID', max_length=10, null=True)),
                ('ne_type', models.CharField(blank=True, db_column='NE Type', max_length=10, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
                ('hardware_description', models.CharField(blank=True, db_column='Hardware Description', max_length=50, null=True)),
                ('functional_description', models.CharField(blank=True, db_column='Functional Description', max_length=50, null=True)),
                ('parent_device_id', models.CharField(blank=True, db_column='Parent Device ID', max_length=250, null=True)),
                ('parentdn', models.CharField(blank=True, db_column='ParentDN', max_length=250, null=True)),
                ('site_id', models.CharField(blank=True, db_column='Site ID', max_length=10, null=True)),
                ('device_state', models.CharField(blank=True, db_column='Device State', max_length=50, null=True)),
                ('software_version', models.CharField(blank=True, db_column='Software Version', max_length=100, null=True)),
                ('integration_date', models.CharField(blank=True, db_column='Integration Date', max_length=100, null=True)),
                ('end_of_support', models.CharField(blank=True, db_column='End of Support', max_length=100, null=True)),
                ('tsa_scope', models.CharField(blank=True, db_column='TSA Scope', max_length=100, null=True)),
                ('product_id', models.CharField(blank=True, db_column='Product ID', max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, db_column='Serial Number', max_length=100, null=True)),
                ('freq_tx_rx_field', models.CharField(blank=True, db_column='FREQ (TX_RX)', max_length=50, null=True)),
                ('hardware_capacity', models.CharField(blank=True, db_column='Hardware Capacity', max_length=50, null=True)),
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=30, null=True)),
                ('ne_owner', models.CharField(blank=True, db_column='NE Owner', max_length=50, null=True)),
                ('tx_clusterimg', models.CharField(blank=True, db_column='TX Clusterimg', max_length=100, null=True)),
                ('tx_type', models.CharField(blank=True, db_column='TX Type', max_length=10, null=True)),
                ('natspcode', models.CharField(blank=True, db_column='NATSPCODE', max_length=50, null=True)),
                ('admin_state', models.CharField(blank=True, db_column='Admin State', max_length=50, null=True)),
                ('subdomain', models.CharField(blank=True, db_column='SUBDOMAIN', max_length=50, null=True)),
                ('function', models.CharField(blank=True, db_column='FUNCTION', max_length=50, null=True)),
                ('iubce_dl_lic', models.CharField(blank=True, db_column='IUBCE DL LIC', max_length=10, null=True)),
                ('iubce_ul_lic', models.CharField(blank=True, db_column='IUBCE UL LIC', max_length=10, null=True)),
                ('s1cu_lic', models.CharField(blank=True, db_column='S1CU LIC', max_length=10, null=True)),
                ('cluster_region', models.CharField(blank=True, db_column='Cluster Region', max_length=50, null=True)),
                ('cluster_sub_region', models.CharField(blank=True, db_column='Cluster Sub Region', max_length=50, null=True)),
                ('cluster_province', models.CharField(blank=True, db_column='Cluster Province', max_length=50, null=True)),
                ('cluster_city', models.CharField(blank=True, db_column='Cluster City', max_length=50, null=True)),
                ('mw_hub', models.CharField(blank=True, db_column='MW HUB', max_length=10, null=True)),
                ('record_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Devices',
                'unique_together': {('dn', 'device_id', 'ems_id', 'ne_type')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('city', models.CharField(max_length=60)),
                ('province', models.CharField(max_length=30)),
                ('region', models.CharField(max_length=4)),
                ('regionname', models.CharField(max_length=40)),
                ('area', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='TocAor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster', models.CharField(max_length=25, unique=True)),
                ('area', models.CharField(max_length=3)),
                ('supervisor', models.CharField(blank=True, max_length=60, null=True)),
                ('manager', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'db_table': 'toc_aor',
            },
        ),
        migrations.CreateModel(
            name='SmartSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siteid', models.CharField(max_length=10, unique=True)),
                ('sitename', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
                ('record_status', models.IntegerField()),
                ('update_at', models.DateTimeField()),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Location')),
                ('toc_aor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.TocAor')),
            ],
            options={
                'db_table': 'smart_site',
            },
        ),
        migrations.CreateModel(
            name='SmartNe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siteid', models.CharField(max_length=10)),
                ('band', models.CharField(max_length=5)),
                ('tech', models.CharField(max_length=10)),
                ('record_status', models.IntegerField()),
                ('update_at', models.DateTimeField()),
                ('smartsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SmartSite')),
            ],
            options={
                'db_table': 'smart_ne',
                'unique_together': {('siteid', 'band', 'tech')},
            },
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=10, null=True)),
                ('ems_cell_id', models.CharField(blank=True, db_column='EMS Cell ID', max_length=250, null=True)),
                ('ems_id', models.CharField(blank=True, db_column='EMS ID', max_length=50, null=True)),
                ('cell_name', models.CharField(db_column='Cell Name', max_length=50)),
                ('dn', models.CharField(blank=True, db_column='DN', max_length=250, null=True)),
                ('site', models.CharField(db_column='Site', max_length=10)),
                ('parent_id', models.CharField(db_column='Parent ID', max_length=250)),
                ('parent_dn', models.CharField(blank=True, db_column='Parent DN', max_length=250, null=True)),
                ('tech', models.CharField(blank=True, db_column='Tech', max_length=50, null=True)),
                ('band', models.CharField(db_column='Band', max_length=5)),
                ('admin_state', models.CharField(blank=True, db_column='Admin State', max_length=50, null=True)),
                ('alias', models.CharField(blank=True, db_column='Alias', max_length=50, null=True)),
                ('lac_tac', models.CharField(blank=True, db_column='LAC TAC', max_length=10, null=True)),
                ('sac_ci_eutra', models.CharField(blank=True, db_column='SAC CI EUTRA', max_length=50, null=True)),
                ('rnc_cid', models.CharField(blank=True, db_column='RNC CID', max_length=10, null=True)),
                ('phy_cid', models.CharField(blank=True, db_column='PHY CID', max_length=10, null=True)),
                ('lcr_cid', models.CharField(blank=True, db_column='LCR CID', max_length=10, null=True)),
                ('mcc', models.CharField(blank=True, db_column='MCC', max_length=5, null=True)),
                ('mnc', models.CharField(blank=True, db_column='MNC', max_length=5, null=True)),
                ('nodeid', models.CharField(blank=True, db_column='NODEID', max_length=10, null=True)),
                ('sector_id', models.CharField(blank=True, db_column='SECTOR ID', max_length=10, null=True)),
                ('carrier', models.CharField(blank=True, db_column='CARRIER', max_length=10, null=True)),
                ('ne_type', models.CharField(blank=True, db_column='NE TYPE', max_length=5, null=True)),
                ('subdomain', models.CharField(db_column='SUBDOMAIN', max_length=10)),
                ('function', models.CharField(blank=True, db_column='FUNCTION', max_length=10, null=True)),
                ('sdcch_cap', models.CharField(blank=True, db_column='SDCCH CAP', max_length=10, null=True)),
                ('tch_cap', models.CharField(blank=True, db_column='TCH CAP', max_length=10, null=True)),
                ('azimuth', models.CharField(blank=True, db_column='Azimuth', max_length=50, null=True)),
                ('record_status', models.IntegerField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Device')),
            ],
            options={
                'verbose_name_plural': 'Cells',
                'unique_together': {('ems_id', 'dn', 'site', 'band', 'subdomain')},
            },
        ),
        migrations.CreateModel(
            name='SiteNeAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_at', models.DateTimeField()),
                ('cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Cell')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Device')),
                ('smartne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SmartNe')),
                ('smartsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SmartSite')),
            ],
            options={
                'db_table': 'site_ne_asset',
                'unique_together': {('cell', 'smartsite', 'smartne', 'device')},
            },
        ),
    ]
